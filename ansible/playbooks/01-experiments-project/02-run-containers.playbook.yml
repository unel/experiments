---

- name: Run docker containers
  hosts: dev_server
  remote_user: root
  vars_files:
    - 00-vars.yml

  tasks:
    - name: Install nodeapss dependencies
      become: true
      ansible.builtin.command: docker compose -f ./docker-compose-preinstall.yml up
      args:
        chdir: "{{ project_root }}/experiments/"
      register: node_deps
      changed_when: node_deps.rc != 0

    - name: Cleanup after install
      become: true
      ansible.builtin.command: docker compose -f ./docker-compose-preinstall.yml rm -f
      args:
        chdir: "{{ project_root }}/experiments/"
      register: node_deps_cleanup
      changed_when: node_deps.rc != 0

    - name: Run docker-compose
      become: true
      ansible.builtin.command: docker-compose up -d
      args:
        chdir: "{{ project_root }}/experiments"

- name: Run containers initialisations
  hosts: dev_server
  remote_user: root
  vars_files:
    - 00-vars.yml

  tasks:
    - name: Mongo // initialte replication system
      ansible.builtin.command: docker compose exec mongo-server mongo -u root -p pwd --port 7777 --eval 'rs.initiate()'
      args:
        chdir: "{{ project_root }}/experiments"

    - name: Mongo // readPref
      ansible.builtin.command: docker compose exec mongo-server mongo -u root -p pwd --port 7777 --eval 'db.getMongo().setReadPref("primaryPreferred")'
      args:
        chdir: "{{ project_root }}/experiments"

    - name: Mongo // secondaryOk
      ansible.builtin.command: docker compose exec mongo-server mongo -u root -p pwd --port 7777 --eval 'rs.secondaryOk()'
      args:
        chdir: "{{ project_root }}/experiments"

    - name: Restart mongo-admin
      ansible.builtin.command: docker compose restart mongo-admin
      args:
        chdir: "{{ project_root }}/experiments"

    - name: Webfront // initialise db
      ansible.builtin.command: docker compose exec webfront npx prisma db seed
      args:
        chdir: "{{ project_root }}/experiments"

    - name: Webfront // initialise db
      ansible.builtin.command: docker compose exec webfront npx prisma db push
      args:
        chdir: "{{ project_root }}/experiments"

    - name: Chat-api // initialise db
      ansible.builtin.command: docker compose exec chat-api npx prisma db push
      args:
        chdir: "{{ project_root }}/experiments"
