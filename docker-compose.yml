version: "3.9"
services:
  dispatcher:
    image: 'nginx:1.23.4-alpine'

    depends_on:
      - webfront
      - mongo-admin

    command: [nginx-debug, '-g', 'daemon off;']
    working_dir: /app
    volumes:
      - ${APPS_DIR}/dispatcher/config/templates:/etc/nginx/templates
      - ${APPS_DIR}/dispatcher/static:/usr/share/nginx/html
      - ${KEYS_DIR}/dispatcher/ssl/certs:/etc/ssl/certs
      - ${KEYS_DIR}/dispatcher/ssl/private:/etc/ssl/private
      - ${KEYS_DIR}/dispatcher/dh:/etc/nginx/dh

    environment:
      - NGINX_PORT=443
      - NODE_PORT=${NODE_PORT}
      - MONGO_ADMIN_PORT=${MONGO_ADMIN_PORT}
      - MONGO_ADMIN_BASEPATH=${MONGO_ADMIN_BASEPATH}
      - NODE_DEV_PORT=${NODE_DEV_PORT}
      - SSL_CERT_PATH=/etc/ssl/certs/nginx-selfsigned.crt
      - SSL_KEY_PATH=/etc/ssl/private/nginx-selfsigned.key
      - DHPARAM_PATH=/etc/nginx/dh/nginx-dhparam.pem

    networks:
      - nginx
      - node-mongo

    ports:
      - '443:443'
      - '444:444'

  webfront:
    image: 'node:20.2.0-alpine3.17'

    depends_on:
      - mongo-admin

    entrypoint: npm run dev -- --host --port=${NODE_PORT}
    working_dir: /app
    volumes:
      - ${APPS_DIR}/webfront:/app

    environment:
      - NODE_DEV_PORT=${NODE_DEV_PORT}
      - PROTOCOL_HEADER=x-forwarded-proto
      - HOST_HEADER=x-forwarded-host
      - ORIGIN=${SITE_ORIGIN}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USERNAME=${MONGO_INITIAL_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITIAL_PASSWORD}
      - USER_ID=${SYSTEM_INITIAL_USERNAME}
      - USER_PASSWORD=${SYSTEM_INITIAL_PASSWORD}

    networks:
      - node-mongo

    # ports:
    #   - '${NODE_PORT}:${NODE_PORT}'
    #   - '${NODE_DEV_PORT}:${NODE_DEV_PORT}'

  mongo-server:
    image: 'mongo:6.0.5'

    entrypoint: docker-entrypoint.sh mongod --replSet rs0 --keyFile=/data/keyfiles/mongokey --port=${MONGO_PORT}

    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITIAL_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITIAL_PASSWORD}

    volumes:
      - ${KEYS_DIR}/mongo:/data/keyfiles/
      - ${BACKUPS_DIR}/mongo:/data/backups/
      # - ${DATA_DIR}/mongo:/data/db

    networks:
      - node-mongo

    # ports:
    #   - '${MONGO_PORT}:${MONGO_PORT}'

    healthcheck:
      test: mongosh --port ${MONGO_PORT} --quiet --eval 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 2s
      retries: 5
      start_period: 0s

  mongo-admin:
    image: 'mongo-express:1.0.0-alpha.4'

    depends_on:
      mongo-server:
        condition: service_healthy
        # condition: service_started
        restart: true

    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_INITIAL_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_INITIAL_PASSWORD}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITIAL_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITIAL_PASSWORD}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_SITE_BASEURL=${MONGO_ADMIN_BASEPATH}
      - ME_CONFIG_MONGODB_SERVER=mongo-server

    networks:
      - node-mongo
      - nginx

    # ports:
    #   - '${MONGO_ADMIN_PORT}:8081'

networks:
  node-mongo: {}
  nginx: {}
