version: "3.9"
services:
  dispatcher:
    image: 'nginx:1.23.4-alpine'

    command: [nginx-debug, '-g', 'daemon off;']
    working_dir: /app
    volumes:
      - ${APPS_DIR}/dispatcher/config/templates:/etc/nginx/templates
      - ${APPS_DIR}/dispatcher/static:/usr/share/nginx/html

    environment:
      - NGINX_PORT=8000
      - NODE_PORT=${NODE_PORT}

    networks:
      - nginx
      - node-mongo

    ports:
      - '80:8000'

  webfront:
    image: 'node:20.2.0-alpine3.17'

    entrypoint: npm run dev -- --host --port=${NODE_PORT}
    working_dir: /app
    volumes:
      - ${APPS_DIR}/webfront:/app

    environment:
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USERNAME=${MONGO_INITIAL_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITIAL_PASSWORD}
      - USER_ID=${SYSTEM_INITIAL_USERNAME}
      - USER_PASSWORD=${SYSTEM_INITIAL_PASSWORD}

    networks:
      - node-mongo

    ports:
      - '${NODE_PORT}:${NODE_PORT}'

  mongo-server:
    image: 'mongo:6.0.5'

    entrypoint: docker-entrypoint.sh mongod --replSet rs0 --keyFile=/data/keyfiles/mongokey --port=${MONGO_PORT}

    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITIAL_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITIAL_PASSWORD}

    volumes:
      - ${WORK_DIR}/keyfiles/mongo:/data/keyfiles/
      - ${WORK_DIR}/backups/mongo:/data/backups/

    networks:
      - node-mongo

    ports:
      - '${MONGO_PORT}:${MONGO_PORT}'

networks:
  node-mongo: {}
  nginx: {}
